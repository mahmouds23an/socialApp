{"ast":null,"code":"\"use client\"; // src/useSuspenseQuery.ts\n\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nimport { defaultThrowOnError } from \"./suspense.js\";\n\nfunction useSuspenseQuery(options, queryClient) {\n  return useBaseQuery({ ...options,\n    enabled: true,\n    suspense: true,\n    throwOnError: defaultThrowOnError\n  }, QueryObserver, queryClient);\n}\n\nexport { useSuspenseQuery };","map":{"version":3,"mappings":";;AACA,SAASA,aAAT,QAA8B,sBAA9B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,mBAAT,QAAoC,eAApC;;AAIO,SAASC,gBAAT,CAMLC,OANK,EAOLC,WAPK,EAQkC;AACvC,SAAOJ,aACL,EACE,GAAGG,OADL;AAEEE,aAAS,IAFX;AAGEC,cAAU,IAHZ;AAIEC,kBAAcN;AAJhB,GADK,EAOLF,aAPK,EAQLK,WARK,CAAP;AAUF","names":["QueryObserver","useBaseQuery","defaultThrowOnError","useSuspenseQuery","options","queryClient","enabled","suspense","throwOnError"],"sources":["D:\\Work\\socialApp\\client\\node_modules\\@tanstack\\react-query\\src\\useSuspenseQuery.ts"],"sourcesContent":["'use client'\nimport { QueryObserver } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport { defaultThrowOnError } from './suspense'\nimport type { UseSuspenseQueryOptions, UseSuspenseQueryResult } from './types'\nimport type { DefaultError, QueryClient, QueryKey } from '@tanstack/query-core'\n\nexport function useSuspenseQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseSuspenseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): UseSuspenseQueryResult<TData, TError> {\n  return useBaseQuery(\n    {\n      ...options,\n      enabled: true,\n      suspense: true,\n      throwOnError: defaultThrowOnError,\n    },\n    QueryObserver,\n    queryClient,\n  ) as UseSuspenseQueryResult<TData, TError>\n}\n"]},"metadata":{},"sourceType":"module"}